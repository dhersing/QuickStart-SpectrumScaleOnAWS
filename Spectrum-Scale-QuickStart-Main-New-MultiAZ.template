{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "(0015) - Step 1 of 3: This template deploys the AWS IBM Spectrum Scale Quick Start. ***NOTE*** You must subscribe to the Chef Server AMI from the AWS Marketplace before you launch this template. See the deployment guide at http://aws.amazon.com/quickstart for details. This template creates Amazon EC2 instances and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters": {
	    "FsName": {
	      "Description": "File system name.",
	      "Type": "String",
	      "MinLength": "1",
	      "Default": "fs1"
	    },
	    "BlockSize": {
	      "Description": "File system block size",
	      "Type": "String",
	      "Default": "1M",
	      "AllowedValues": [
	         "64K", "128K", "256K", "512K", "1M", "2M", "4M", "8M", "16M"
	      ]
	    },
	    "DataReplica": {
	      "Description": "Data replica",
	      "Type": "Number",
	      "Default": "1",
	      "MinValue": "1",
	      "MaxValue": "3"
	    },
	    "MetadataReplica": {
	      "Description": "Metadata replica",
	      "Type": "Number",
	      "Default": "1",
	      "MinValue": "1",
	      "MaxValue": "3"
	    },
	    "GpfsMountPoint": {
	      "Description": "The Linux mount point for the GPFS volume",
	      "Type": "String",
	      "MinLength": "1",
	      "Default": "/gfs/fs1"
	    },
	    "EBSType": {
	      "Description": "EBS Type",
	      "Type": "String",
	      "Default": "gp2",
	      "AllowedValues": [
	        "standard",
	        "gp2",
	        "io1"
	      ]
	    },
	    "DiskPerNode": {
	      "Description": "This number of disks would be attached to only with nsd server nodes.",
	      "Type": "Number",
	      "MinValue": "1",
	      "MaxValue": "10",
	      "Default": "1"
	    },
	    "DiskSize": {
	      "Description": "Disk size (size in GB and MAX supported size would be 10000 (10TB)",
	      "Type": "Number",
	      "Default": "5",
	      "MinValue": "5",
	      "MaxValue": "10000"
	    },
	    "ServerNodeCount": {
	      "Description": "Number of EC2 instances to launch for NSD Server on GPFS cluster (Max<=64)",
	      "Type": "Number",
	      "Default": "1",
	      "MinValue": "1",
	      "MaxValue": "64"
	    },
	    "ServerInstanceType": {
	      "Description": "Instance type to use for the NSD Server nodes instances",
	      "Type": "String",
	      "Default": "m4.large",
	      "AllowedValues": [
	        "m4.large",
	        "m4.xlarge",
	        "m4.2xlarge",
	        "m4.4xlarge",
	        "m4.10xlarge",
	        "m4.16xlarge",
	        "c4.large",
	        "c4.xlarge",
	        "c4.2xlarge",
	        "c4.4xlarge",
	        "c4.8xlarge",
	        "c3.large",
	        "c3.xlarge",
	        "c3.2xlarge",
	        "c3.4xlarge",
	        "c3.8xlarge",
	        "cc2.8xlarge"
	      ],
	      "ConstraintDescription": "must be a valid EC2 instance type."
	    },
	    "ComputeNodeCount": {
	      "Default": "1",
	      "Description": "Number of Compute node instances (MAX 64)",
	      "Type": "Number",
	      "MinValue": "0",
	      "MaxValue": "64"
	    },
	    "ComputeInstanceType": {
	      "Description": "Instance type to use for the Compute node instances",
	      "Type": "String",
	      "Default": "m4.large",
	      "AllowedValues": [
	        "m4.large",
	        "m4.xlarge",
	        "m4.2xlarge",
	        "m4.4xlarge",
	        "m4.10xlarge",
	        "m4.16xlarge",
	        "c4.large",
	        "c4.xlarge",
	        "c4.2xlarge",
	        "c4.4xlarge",
	        "c4.8xlarge",
	        "c3.large",
	        "c3.xlarge",
	        "c3.2xlarge",
	        "c3.4xlarge",
	        "c3.8xlarge",
	        "cc2.8xlarge"
	      ],
	      "ConstraintDescription": "must be a valid EC2 instance type."
	    },
	    "AvailabilityZones": {
	      "Description": "Provided list of AZs region for the cluster",
	      "Type": "List<AWS::EC2::AvailabilityZone::Name>",
	      "Default": "us-west-2b"
	    },
	    "VPCCIDR": {
            "Description": "CIDR Block for the VPC",
            "Type": "String",
            "Default": "10.0.0.0/16",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.144.0/20",
            "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2",
            "Type": "String"
         },
	    "RemoteAccessLocation": {
	      "Description": "Lockdown RDP access to the bastion host (default can be accessed from anywhere)",
	      "Type": "String",
	      "Default": "0.0.0.0/0",
	      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
	      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
	    },
	    "s3path": {
	      "Default": "ssprojects/gpfsaws/QuickStarts",
	      "Description": "Root Path for all s3 related Data",
	      "Type": "String"
	    },
	    "KeyName": {
	      "Description": "Name of an existing EC2 Key Pair",
	      "Type": "AWS::EC2::KeyPair::KeyName",
	      "MinLength": "1",
	      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
	    },
	    "ClusterName": {
	      "Description": "The name of the gpfs cluster",
	      "Type": "String",
	      "MinLength": "1",
	      "Default": "gpfsaws"
	    },
	    "IAMRole" : {
	      "Description" : "Add existing role name (default will create new IAM role).",
	      "Type": "String",
	      "Default": "new",
	      "ConstraintDescription" : "Add existing role name if don't want to create new one (Optional)."
	    }
	  },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-us-west-2.amazonaws.com/ssprojects/gpfsaws/QuickStarts/quickstart-ibm-spectrumscale-new-MultiAZ-VPC.template",
                "Parameters": {
                    "KeyName": {
                        "Ref": "KeyName"
                    },                  
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
				    "AvailabilityZones": {
				    	"Fn::Join": [
				    		",",
				    		{
				    			"Ref": "AvailabilityZones"
				    		}
				    	]
				    }	
                }
            }
        },
        "ClusterStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-us-west-2.amazonaws.com/ssprojects/gpfsaws/QuickStarts/quickstart-ibm-spectrumscale-new-SingalAZ-Cluster.template",
                "Parameters": {
				    "FsName": {
				    	"Ref": "FsName"
				    },
				    "BlockSize": {
				      	"Ref": "BlockSize"
				    },
				    "DataReplica": {
				      	"Ref": "DataReplica"
				    },
				    "MetadataReplica": {
				      	"Ref": "MetadataReplica"
				    },
				    "GpfsMountPoint": {
				    	"Ref": "GpfsMountPoint"
				    },
				    "EBSType": {
				        "Ref": "EBSType"
				    },
				    "DiskPerNode": {
				    	"Ref": "DiskPerNode"  
				    },
				    "DiskSize": {
				    	"Ref": "DiskSize"
				    },
				    "ServerNodeCount": {
				    	"Ref": "ServerNodeCount"
				    },
				    "ServerInstanceType": {
				    	"Ref": "ServerInstanceType"
				    },
				    "ComputeNodeCount": {
				    	"Ref": "ComputeNodeCount"
				    },
				    "ComputeInstanceType": {
				    	"Ref": "ComputeInstanceType"
				    },
				    "AvailabilityZones": {
				      	"Ref": "AvailabilityZones"
				    },
				    "SubnetId1": {
                           "Fn::GetAtt": [
                                 "VPCStack",
                                 "Outputs.SubnetId1"
                          ]
                    },
                    "SubnetId2": {
                           "Fn::GetAtt": [
                                 "VPCStack",
                                 "Outputs.SubnetId2"
                          ]
                    },
                    "VpcId": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPC"
                        ]
                    },
				    "RemoteAccessLocation": {
				     	"Ref": "RemoteAccessLocation" 
				     },
				    "s3path": {
				    	"Ref": "s3path"
				    },
				    "KeyName": {
				    	"Ref": "KeyName"
				    },
				    "ClusterName": {
				     	"Ref": "ClusterName" 
				     },
				    "IAMRole" : {
				     	"Ref": "IAMRole" 
				     }
				  }
	            }
        }
    }
}
